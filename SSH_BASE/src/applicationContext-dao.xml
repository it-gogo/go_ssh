<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">
    
     <!-- 设置配置文件 -->
     <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" lazy-init="true">
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
			    <value>classpath:database.properties</value>
		    </list>
		</property>
	</bean>
	
	
	<!-- 数据源配置 -->
	<bean id="myDataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
	  <property name="driverClassName">
	     <value>${d1.jdbc.driver}</value>
	  </property>
	  <property name="url">
	     <value>${d1.jdbc.url}</value>
	  </property>
	  <property name="username">
	    <value>${d1.jdbc.username}</value>
	  </property>
	  <property name="password">
	    <value>${d1.jdbc.password}</value>
	  </property>
	  <property name="filters" value="stat" />
	  <!-- 设置连接池初始值 -->
	  <property name="initialSize" value="25" />
	  <!-- 设置连接池最大值 -->
	  <property name="maxActive" value="1000" />
	
	  <!-- 设置连接池最小空闲值--> 
	  <property name="minIdle" value="20" />
	  
	  <!-- 设置连接池最大空闲值 -->
	  <property name="maxIdle" value="150" />
	  <!-- 
	  <property name="removeAbandoned" value="true"/>
	   -->
	</bean>
	
	
	 
	<!-- 配置SESSIONFACTORY -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
       <property name="dataSource" ref="myDataSource"></property>
       <!-- 配置HIBERNATE属性 -->
	   <property name="hibernateProperties">
		  <props>
		    <prop key="hibernate.dialect">
		      ${d1.hibernate.dialect}
		    </prop>
		   
		    <prop key="hibernate.show_sql">
		      ${d1.hibernate.show_sql}
		    </prop>
		    <prop key="hibernate.format_sql">
		    	${d1.hibernate.format_sql}
		    </prop>
		    <!-- 打开二级缓存 -->
		    <prop key=" hibernate.cache.use_sencond_levl_cache">
		       true
		    </prop>
		     <prop key="hibernate.cache.use_query_cache">
		       false
		    </prop>
		    <prop key="hibernate.jdbc.batch_size">
		       30
		    </prop>
		     <prop key="hibernate.connection.release_mode">after_transaction</prop>
		  </props>
		</property>
		
		<!-- 配置映射PO -->
		<property name="mappingDirectoryLocations">
			<list>
			  <value>
			     classpath:/com/sb/po
			  </value>
			</list>
	    </property>
	</bean>
	
	<!-- 使用注解方式定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<!-- 使用AspectJ方式配置AOP -->
	<aop:aspectj-autoproxy proxy-target-class="true" />
	<aop:config proxy-target-class="true" />
	
	<!-- 配置事务管理 org.springframework.orm.hibernate3.HibernateTransactionManager com.bxun.core.dao.DynamicTransactionManager-->
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
	  <property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	
	<!-- 定义事务通知-->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
	    <tx:attributes>
	      
           <tx:method name="add*" propagation="REQUIRED"  />  
           <tx:method name="save*" propagation="REQUIRED" />  
           <tx:method name="create*" propagation="REQUIRED" />  
           <tx:method name="insert*" propagation="REQUIRED" />  
           <tx:method name="update*" propagation="REQUIRED" />  
           <tx:method name="merge*" propagation="REQUIRED" />  
           <tx:method name="del*" propagation="REQUIRED" />  
           <tx:method name="remove*" propagation="REQUIRED" />  
           <tx:method name="put*" propagation="REQUIRED" />  
           <tx:method name="load*" propagation="REQUIRED"/>  
           <tx:method name="get*" propagation="SUPPORTS" />  
           <tx:method name="count*" propagation="SUPPORTS" />  
           <tx:method name="find*" propagation="SUPPORTS"  />  
           <tx:method name="list*" propagation="SUPPORTS"  />  
           <tx:method name="*" propagation="SUPPORTS" />  
	    </tx:attributes>  
	</tx:advice>
	
	<!-- 控制事务 -->
	<aop:config>
		<aop:advisor pointcut="execution(* com.sb..action..*.*(..))" advice-ref="txAdvice" />
	</aop:config>
	
	
	
	 
	 <!-- 配置javamail -->
    <bean id="mailSender"  class="org.springframework.mail.javamail.JavaMailSenderImpl">  
        <property name="host">  
            <value>smtp.126.com</value>  
        </property>  
        <property name="javaMailProperties">  
            <props>  
                <prop key="mail.smtp.auth">true</prop>  
                <prop key="mail.smtp.starttls.enable">true</prop>
                <prop key="mail.smtp.timeout">25000</prop>  
            </props>
        </property>
        <property name="username">
            <!-- <value>bxuntech@126.com</value> -->
            <value>c641484739@126.com</value>
        </property>  
        <property name="password">  
            <!-- <value>5518360</value>  -->
            <value>haibin1989#</value> 
        </property>
    </bean>  
</beans>